Given a 2D integer matrix M representing the gray scale of an image, you need to design a smoother to make the gray scale of each cell becomes 
the average gray scale (rounding down) of all the 8 surrounding cells and itself. If a cell has less than 8 surrounding cells, then use as many as you can.

Input Description:
First line conatins, N the size of matrix.(1<N<100)
Rest line conatins, NxN matrix M as integers.

Output Description:
Print the matrix after smoothing in a single line.

Sample Input:
3
1 1 1
1 0 1
1 1 1

Sample Output:
[0, 0, 0] [0, 0, 0] [0, 0, 0]

Explanation:
For the point (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0
For the point (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0
For the point (1,1): floor(8/9) = floor(0.88888889) = 0

Sample INput:
4
1 0 1 1
1 1 1 1
1 0 1 1
1 1 0 1

Sample Output:
[0, 0, 0, 1] [0, 0, 0, 1] [0, 0, 0, 0] [0, 0, 0, 0]

Sample Input:
2
1 0
1 1

Sample Output:
[0, 0] [0, 0]

Sample Input:
2
1 1
1 1

Sample Output:
[1, 1] [1, 1]

Sample Input:
3
0 1 1
1 1 1
1 0 0

Sample Output:
[0, 0, 1] [0, 0, 0] [0, 0, 0]

Sample Input:
4
1 0 1 0
0 1 0 1
1 0 1 0
0 1 0 1

Sample Output:
[0, 0, 0, 0] [0, 0, 0, 0] [0, 0, 0, 0] [0, 0, 0, 0]
